# Test generated by RoostGPT for test dm-test using AI Type Open AI and AI Model gpt-4

# Test generated by RoostGPT for test dm-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:

  - name: "Successful API request"
    flow:
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            id: 10
            name: "apple"
            description: "description of the product"
            price: 20
          capture:
            json: "$"
            as: "response"
      - think: 1
      - log: "Response status code: {{ response.statusCode }}"
      - assert:
          - statusCode: 200
          - hasProperty: ["id", "name", "description", "price"]

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            id: 10
            description: "description of the product"
            price: 20
          capture:
            json: "$"
            as: "response"
      - think: 1
      - log: "Response status code: {{ response.statusCode }}"
      - assert:
          - statusCode: 405

  - name: "API request with edge case"
    flow:
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            id: 10
            name: "apple with special characters !@#$%^&*()"
            description: "description of the product with large data" + "a"*10000
            price: 20
          capture:
            json: "$"
            as: "response"
      - think: 1
      - log: "Response status code: {{ response.statusCode }}"
      - assert:
          - statusCode: [200, 201, 202]
          - hasProperty: ["id", "name", "description", "price"]

  - name: "API request without required field"
    flow:
      - post:
          url: "/products"
          headers:
            Content-Type: "application/json"
          json:
            id: 10
            description: "description of the product"
            price: 20
          capture:
            json: "$"
            as: "response"
      - think: 1
      - log: "Response status code: {{ response.statusCode }}"
      - assert:
          - statusCode: 405
