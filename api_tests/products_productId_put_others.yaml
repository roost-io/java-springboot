# Test generated by RoostGPT for test apitest-artillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=6762b8ac71

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "products_productId_put_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "price"
    skipHeader: true

scenarios:
  - name: "Edge case and error handling for update product API"
    flow:
      - log: "Testing with invalid URL"
      - put:
          url: "/product/{productId}" # invalid URL
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
      - think: 5

      - log: "Testing with invalid product id"
      - put:
          url: "/products/{invalidProductId}" # invalid product id
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
      - think: 5

      - log: "Testing with invalid authorization token"
      - put:
          url: "/products/{{ productId }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "invalidToken" # invalid authorization token
          expect:
            - statusCode: 403 # Unauthorized
            - hasProperty: "error"
      - think: 5

      - log: "Testing with missing required field"
      - put:
          url: "/products/{{ productId }}"
          json:
            id: "{{ id }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400 # Bad Request
            - hasProperty: "error"
      - think: 5

      - log: "Testing with invalid data type for product id"
      - put:
          url: "/products/{{ productId }}"
          json:
            id: "invalidId" # invalid data type for id
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400 # Bad Request
            - hasProperty: "error"
