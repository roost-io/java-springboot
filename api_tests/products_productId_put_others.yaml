# ********RoostGPT********
# Test generated by RoostGPT for test dm-demo-api-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Test generated for /products/{productId}_put for http method type PUT in artillery framework
# RoostTestHash=6762b8ac71



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "products_productId_others.csv"
    fields:
      - "productId"
      - "name"
      - "description"
      - "price"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 5
variables:
  apiPath: "/products"
scenarios:
  - name: "API Test Scenario for non-successful responses"
    flow:
      # Testing Invalid URL
      - get:
          url: "/InvalidURLPath"
          expect:
            - statusCode: 404
          think: 1

      # Testing PUT request with invalid payload
      - put: 
          url: "{{ apiPath }}/{{ productId }}"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "Not a valid Price"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400
          think: 1

      # Testing PUT request with invalid authorization token
      - put:
          url: "{{ apiPath }}/{{ productId }}"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer InvalidToken"
          expect:
            - statusCode: 401
          think: 1

      # Testing PUT request for non-existing product id
      - put:
          url: "{{ apiPath }}/NoSuchProductId"
          json:
            id: "NoSuchProductId"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
          think: 1
