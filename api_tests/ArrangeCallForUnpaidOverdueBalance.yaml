# ********RoostGPT********

# Test generated by RoostGPT for test TDD-based-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=bd4a05a554
# ROOST_METHOD_SIG_HASH=995279140f
# 
#    ########## Scenario ##########  
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Arrange for a call to the user if the balance is unpaid and overdue\n' +
#     '  Given there is an Unpaid and Overdue Credit Card balance\n' +
#     '  When the client sends a POST request to "/api/creditCard/checkBalance" with the credit card balance, due date, and contact details\n' +
#     '  Then the response status code should be 200\n' +
#     '  And a call should be arranged to the user',
#   title: 'Arrange for a call to the user if the balance is unpaid and overdue'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/creditCard"
  processor: "./processor.js"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "ArrangeCallForUnpaidOverdueBalance.csv"
    fields:
      - "balance"
      - "dueDate"
      - "contactDetails"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Arrange for a call to the user if the balance is unpaid and overdue"
    flow:
      - get:
          url: "/details"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            # Check if balance and due date are retrieved and not empty
            - hasProperty: "body.balance"
            - hasProperty: "body.dueDate"
      - log: "Fetched credit card due date and balance"
      - think: 1
      - post:
          url: "/checkBalance"
          json:
            balance: "{{ balance }}"
            dueDate: "{{ dueDate }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            # Ensure call is arranged when balance is unpaid and overdue
            - hasProperty: "body.callArranged"
            - equals: 
                body.callArranged: true
      - log: "Arranged a call to collect payment if balance is unpaid and overdue."
      - think: 1
      - post:
          url: "/payment"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            # Ensure payment is successful and balance is updated
            - hasProperty: "body.paymentStatus"
            - equals: 
                body.paymentStatus: "Successful"
            - hasProperty: "body.updatedBalance"
      - log: "Updated the card balance after successful payment collection."
      - think: 1
