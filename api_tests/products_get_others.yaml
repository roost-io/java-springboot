# ********RoostGPT********
# Test generated by RoostGPT for test dm-demo-api-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Test generated for /products_get for http method type GET in artillery framework
# RoostTestHash=ed0d766b50



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  
  phases:
  - duration: 60
    arrivalRate: 1

  plugins:
  - expect: {}

  payload:
    path: "products_get_others.csv"
    fields: # include fields as per the schema
    - field1
    - field2
    skipHeader: true

  defaults:
    headers:
      Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
  

scenarios:
- name: "API Edge Testing"

  flow:
  - # POST with Invalid Payload
    post: # mention invalid API url if needed
      url: "/products"
      headers:
        Content-Type: "application/json"
      json:
        field1: "{{ field1 }}"
        field2: "{{ field2 }}"
    expect:
    - statusCode: 400  

    think: 1

  - # GET non existent product
    get: 
      url: "/products/not_existing_product"
    expect:
    - statusCode: 404
          
    think: 1

  - # DELETE non existing product 
    delete: 
      url: "/products/not_existing_product"
    expect:
    - statusCode: 404
       
    think: 1

  - # PUT with invalid Payload 
    put: 
      url: "/products"
      headers:
        Content-Type: "application/json"
      json:
        field1: "{{ field1 }}"
        field2: "{{ field2 }}"
    expect:
    - statusCode: 400

    think: 1

  - # PATCH with invalid Payload 
    patch: 
      url: "/products"
      headers:
        Content-Type: "application/json"
      json:
        field1: "{{ field1 }}"
        field2: "{{ field2 }}"
    expect:
    - statusCode: 400

    think: 1  

  - # GET with invalid url
    get: 
      url: "/invalid_url"
    expect:
    - statusCode: 404
    
    think: 1  
