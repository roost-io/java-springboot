// Test generated by RoostGPT for test dm-new-integration using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20
  defaults:
    headers:
      Content-Type: "application/json"

scenarios:
  - name: "Scenario: Get all products"
    # This scenario tests the functionality of getting all products from the server.
    # The expected behavior is that the server should return a status code of 200 and a list of all products.
    # In this case, we also check if the products array is empty as per the original test scenario objectives.
    flow:
      - get:
          url: "/products"
          headers: 
            # Headers can be customized as per the requirements
            Authorization: "Bearer {{ $processEnvironment.TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "products"
            - equals:
                products: []
      - log: "Received 200 response with an empty products list"
  - name: "Scenario: Validate product structure"
    # This scenario tests the structure of the products returned by the server.
    # The expected behavior is that each product should have the properties: id, name, description, price.
    flow:
      - get:
          url: "/products"
          headers: 
            Authorization: "Bearer {{ $processEnvironment.TOKEN }}"
          capture:
            json: "$.products[0]"
            as: "firstProduct"
      - think: 1
      - log: "Validating the structure of the first product"
      - assert:
          - "firstProduct.id": { "type": "integer" }
          - "firstProduct.name": { "type": "string" }
          - "firstProduct.description": { "type": "string" }
          - "firstProduct.price": { "type": "integer" }
