# Test generated by RoostGPT for test dm-test using AI Type Open AI and AI Model gpt-4

# Test generated by RoostGPT for test dm-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20
  processor: "./my-functions.js"
  
scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/products/{{ $randomNumber(1, 100) }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "id"
            - hasProperty: "description"
            - hasProperty: "price"

  - name: "API request with validation failure"
    flow:
      - get:
          url: "/products/invalid"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 404

  - name: "API request with edge case"
    flow:
      - get:
          url: "/products/{{ $randomNumber(1, 1000000) }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: function(statusCode){
                return statusCode >= 200 && statusCode < 300;
              }
            - hasProperty: "name"
            - hasProperty: "id"
            - hasProperty: "description"
            - hasProperty: "price"

  - name: "API request with specific product ID"
    flow:
      - get:
          url: "/products/4"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "id"
            - hasProperty: "description"
            - hasProperty: "price"
            - equals:
                jsonpath: "$.id"
                value: 4
            - equals:
                jsonpath: "$.name"
                value: "apple"
            - equals:
                jsonpath: "$.description"
                value: "description of the product"
            - equals:
                jsonpath: "$.price"
                value: 20
