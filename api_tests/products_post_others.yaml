# Test generated by RoostGPT for test apitest-artillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=2c080099fd

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "products_post_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "price"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Test for failure, error and edge cases of /products API"
    flow:
      - log: "POST request with missing 'name' field in the payload"
        post:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 405
            - hasProperty: "description"
            # Expecting the API to return a 'description' property in the response body indicating the error
      - think: 1

      - log: "POST request with a non-integer 'price' value in the payload"
        post:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "invalid_price"
          expect:
            - statusCode: 405
            - hasProperty: "description"
            # Expecting the API to return a 'description' property in the response body indicating the error
      - think: 1

      - log: "POST request with an invalid URL"
        post:
          url: "/invalid_url"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            # Expecting the API to return a 404 status code as the URL is invalid
      - think: 1

      - log: "POST request with an invalid Authorization token"
        post:
          url: "/products"
          headers:
            Authorization: "Invalid_Token"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
            # Expecting the API to return a 401 status code as the Authorization token is invalid
