/*
Test generated by RoostGPT for test Integrationtest using AI Type Open AI and AI Model gpt-4

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create a new product\r\n' +
    '    Given the client provides the following product data:\r\n' +
    '      | name        | description              | price |\r\n' +
    '      | Test Product | This is a test product. | 10.0  |\r\n' +
    '    When the client sends a POST request to "/api/products"\r\n' +
    '    Then the saved product should not be null and its properties must correspond to those provided by client',
  title: 'Create a new product'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.testng.Assert;
import org.testng.annotations.Test;
import java.util.HashMap;
import java.util.Map;
import static io.restassured.RestAssured.given;

public class CreateANewProductTest {

    @Test
    public void createANewProductTest() {

        // Define base URL
        RestAssured.baseURI = System.getenv("API_HOST");

        // Define payload
        Map<String, Object> payload = new HashMap<>();
        payload.put("name", "Test Product");
        payload.put("description", "This is a test product.");
        payload.put("price", 10.0);

        // Define headers
        Map<String, String> headers = new HashMap<>();
        headers.put("Content-Type", "application/json");

        // Send POST request to "/api/products"
        Response response = given()
            .headers(headers)
            .body(payload)
            .when()
            .post("/api/products");

        // Validate the response
        Assert.assertEquals(response.getStatusCode(), 200);
        Assert.assertNotNull(response.getBody().jsonPath().get("id"));
        Assert.assertEquals(response.getBody().jsonPath().get("name"), "Test Product");
        Assert.assertEquals(response.getBody().jsonPath().get("description"), "This is a test product.");
        Assert.assertEquals(response.getBody().jsonPath().get("price"), 10.0);
    }
}
