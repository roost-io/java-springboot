/*
Test generated by RoostGPT for test newtest using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Delete an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    When the client sends a DELETE request to "/api/products/1"\r\n' +
    '    Then the response status code should be 200\r\n' +
    '    And the product with ID 1 should no longer exist',
  title: 'Delete an existing product'
}

*/
package com.bootexample4;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class RoostTest {

    @Before
    public void setUp() {
        RestAssured.baseURI = "http://localhost:8080";
    }

    @Test
    public void deleteAnExistingProductTest() {
        //Given there is an existing product with ID 1
        String productId = "1";

        // When the client sends a DELETE request to "/api/products/1"
        Response response = given()
                            .when()
                             .delete("/api/products/"+productId);

        // Then the response status code should be 200
        response.then()
                .statusCode(200)
                .and()
                .contentType(ContentType.JSON);

        // And the product with ID 1 should no longer exist
        given()
                .when()
                .get("/api/products/"+productId)
                .then()
                .assertThat()
                .body(equalTo("Product with ID: "+productId+" not found."));
    }
}
