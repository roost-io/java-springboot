/*
Test generated by RoostGPT for test newtest using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create a new product\r\n' +
    '    Given the client provides the following product data:\r\n' +
    '      | name        | description              | price |\r\n' +
    '      | Test Product | This is a test product. | 10.0  |\r\n' +
    '    When the client sends a POST request to "/api/products"\r\n' +
    '    Then the saved product should not be null and its properties must correspond to those provided by client',
  title: 'Create a new product'
}

*/
package com.bootexample4.RoostTest;

import org.junit.*;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.ValidatableResponse;

import java.util.HashMap;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

public class CreateANewProductTest {

    @BeforeClass
    public static void setupURL() {
        RestAssured.baseURI = System.getenv("API_HOST");
    }

    @Test
    public void testCreateANewProduct() {
        // Build product payload
        HashMap<String, Object> productData = new HashMap<String, Object>();
        productData.put("name", "Test Product");
        productData.put("description", "This is a test product.");
        productData.put("price", "10.0");

        // Send POST request
        ValidatableResponse response = 
            given().
                contentType(ContentType.JSON).
                body(productData).
            when().
                post("/api/products").
            then();

        // Assert that the saved product is not null
        response.assertThat().statusCode(201);
        response.body("name", equalTo("Test Product"));
        response.body("description", equalTo("This is a test product."));
        response.body("price", equalTo("10.0"));
    }
}
