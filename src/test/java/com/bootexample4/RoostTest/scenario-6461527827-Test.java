/*
Test generated by RoostGPT for test Integrationtest using AI Type Open AI and AI Model gpt-4

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Delete an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    When the client sends a DELETE request to "/api/products/1"\r\n' +
    '    Then the response status code should be 200\r\n' +
    '    And the product with ID 1 should no longer exist',
  title: 'Delete an existing product'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.not;

public class DeleteAnExistingProductTest {

    @BeforeAll
    public static void setUp() {
        RestAssured.baseURI = System.getenv("API_HOST");
    }

    @Test
    public void deleteAnExistingProduct() {
        // Given there is an existing product with ID 1
        int productId = 1;

        // When the client sends a DELETE request to "/api/products/1"
        given().pathParam("id", productId)
                .when().delete("/api/products/{id}")
                
                // Then the response status code should be 200
                .then().assertThat().statusCode(200);

        // And the product with ID 1 should no longer exist
        given().pathParam("id", productId)
                .when().get("/api/products/{id}")
                
                // Assert that the product does not exist
                .then().assertThat()
                .statusCode(not(equalTo(200)));
    }
}
