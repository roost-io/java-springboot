/*
Test generated by RoostGPT for test Integrationtest using AI Type Open AI and AI Model gpt-4

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Update an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    And the client provides the following product data:\r\n' +
    '      | name           | description                      | price |\r\n' +
    '      | Updated Product | This is an updated test product. | 15.0  |\r\n' +
    '    When the client sends a PUT request to "/api/products/1"\r\n' +
    '    Then the product with ID 1 should be updated with the provided details',
  title: 'Update an existing product'
}

*/
package com.bootexample4.RoostTest;

import org.junit.Test;
import static io.restassured.RestAssured.given;
import io.restassured.http.ContentType;
import static org.hamcrest.Matchers.*;

public class UpdateAnExistingProductTest {

    @Test
    public void updateExistingProduct() {
        String baseUrl = System.getenv("API_HOST");

        // Define the payload for the request
        String payload = "{\n" +
                "  \"name\": \"Updated Product\",\n" +
                "  \"description\": \"This is an updated test product.\",\n" +
                "  \"price\": 15.0\n" +
                "}";

        // Send a PUT request to update the product
        given()
            .baseUri(baseUrl)
            .contentType(ContentType.JSON)
            .body(payload)
            .when()
            .put("/api/products/1")
            .then()
            .statusCode(200)
            .body("name", equalTo("Updated Product"))
            .body("description", equalTo("This is an updated test product."))
            .body("price", equalTo(15.0));

        // Send a GET request to verify the product was updated
        given()
            .baseUri(baseUrl)
            .when()
            .get("/api/products/1")
            .then()
            .statusCode(200)
            .body("name", equalTo("Updated Product"))
            .body("description", equalTo("This is an updated test product."))
            .body("price", equalTo(15.0));
    }
}
