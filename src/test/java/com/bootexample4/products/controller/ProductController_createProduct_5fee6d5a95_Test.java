// Test generated by RoostGPT for test dmtestunit using AI Type Open AI and AI Model gpt-4

package com.bootexample4.products.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class ProductController_createProduct_5fee6d5a95_Test {

    @InjectMocks
    private ProductController productController;

    @Mock
    private ProductRepository productRepository;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testCreateProduct_Success() {
        Product mockProduct = new Product();
        mockProduct.setId(1L);  // changed from 1 to 1L
        mockProduct.setName("Product1");
        mockProduct.setDescription("Description1");
        mockProduct.setPrice(100.0);

        when(productRepository.save(any(Product.class))).thenReturn(mockProduct);

        Product product = new Product();
        product.setName("Product1");
        product.setDescription("Description1");
        product.setPrice(100.0);

        Product createdProduct = productController.createProduct(product);

        assertEquals(mockProduct, createdProduct);
    }

    @Test
    public void testCreateProduct_Failure() {
        when(productRepository.save(any(Product.class))).thenReturn(null);

        Product product = new Product();
        product.setName("Product1");
        product.setDescription("Description1");
        product.setPrice(100.0);

        Product createdProduct = productController.createProduct(product);

        assertEquals(null, createdProduct);
    }
}
