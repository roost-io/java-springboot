// Test generated by RoostGPT for test java-dm-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.bootexample4.products.controller;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;

import static org.assertj.core.api.Assertions.assertThat;

@DataJpaTest
public class ProductController_createProduct_36b748883e_Test {

    @Autowired
    private TestEntityManager entityManager;

    @Autowired
    private ProductRepository productRepository;

    private Product product;

    @BeforeEach
    public void setUp() {
        product = new Product();
        product.setName("Test Product");
        product.setDescription("This is a test product");
        product.setPrice(100.00);
    }

    @Test
    public void testCreateProductSuccess(){
        // given
        entityManager.persistAndFlush(product);

        // when
        Product savedProduct = productRepository.save(product);

        // then
        assertThat(savedProduct).isNotNull();
        assertThat(savedProduct.getName()).isEqualTo(product.getName());
        assertThat(savedProduct.getDescription()).isEqualTo(product.getDescription());
        assertThat(savedProduct.getPrice()).isEqualTo(product.getPrice());
    }

    @Test
    public void testCreateProductFailure(){
        // given
        Product invalidProduct = null;

        // when
        Exception exception = null;
        try {
            productRepository.save(invalidProduct);
        } catch (Exception e) {
            exception = e;
        }

        // then
        assertThat(exception).isNotNull();
        assertThat(exception).isInstanceOf(IllegalArgumentException.class);
    }
}
