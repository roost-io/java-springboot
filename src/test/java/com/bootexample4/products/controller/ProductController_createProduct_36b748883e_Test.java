// Test generated by RoostGPT for test java-test using AI Type Open AI and AI Model gpt-4

package com.bootexample4.products.controller;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class ProductController_createProduct_36b748883e_Test {

    @InjectMocks
    private ProductController productController;

    @Mock
    private ProductRepository productRepository;

    @Test
    public void testCreateProduct_Success() {
        Product product = new Product();
        product.setId(1);
        product.setName("Product 1");

        when(productRepository.save(any(Product.class))).thenReturn(product);

        Product createdProduct = productController.createProduct(product);

        assertNotNull(createdProduct);
        assertEquals(product.getId(), createdProduct.getId());
        assertEquals(product.getName(), createdProduct.getName());

        verify(productRepository, times(1)).save(product);
    }

    @Test
    public void testCreateProduct_Failure() {
        Product product = new Product();
        product.setId(1);
        product.setName("Product 1");

        when(productRepository.save(any(Product.class))).thenReturn(null);

        Product createdProduct = productController.createProduct(product);

        assertNull(createdProduct);

        verify(productRepository, times(1)).save(product);
    }
}
