// Test generated by RoostGPT for test dm-cloudwatch using AI Type Vertex AI and AI Model code-bison

package com.bootexample4.products.controller;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class ProductController_createProduct_36b74883e_Test {

    @InjectMocks
    private ProductController productController;

    @Mock
    private ProductRepository productRepository;

    @Test
    public void testCreateProduct_success() {
        Product product = new Product();
        product.setName("iPhone 12");
        product.setPrice(999.99);

        when(productRepository.save(product)).thenReturn(product);

        ResponseEntity<Product> responseEntity = productController.createProduct(product);

        assertEquals(201, responseEntity.getStatusCodeValue());
        assertEquals(product, responseEntity.getBody());
    }

    @Test
    public void testCreateProduct_failure() {
        Product product = new Product();
        product.setName("iPhone 12");
        product.setPrice(999.99);

        when(productRepository.save(product)).thenReturn(null);

        ResponseEntity<Product> responseEntity = productController.createProduct(product);

        assertEquals(500, responseEntity.getStatusCodeValue());
        assertEquals(null, responseEntity.getBody());
    }

}
