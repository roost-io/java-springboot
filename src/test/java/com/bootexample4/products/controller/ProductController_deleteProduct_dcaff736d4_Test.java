// Test generated by RoostGPT for test dm-cloudwatch using AI Type Vertex AI and AI Model code-bison

package com.bootexample4.products.controller;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.ResponseEntity;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@SpringBootTest
@AutoConfigureMockMvc
public class ProductController_deleteProduct_dcaff736d4_Test {

    @Autowired
    private ProductController productController;

    @MockBean
    private ProductRepository productRepository;

    @Test
    public void testDeleteProduct_whenProductExists() {
        // Given
        Long id = 1L;
        Product product = new Product();
        product.setId(id);
        when(productRepository.findById(id)).thenReturn(Optional.of(product));

        // When
        ResponseEntity<Object> responseEntity = productController.deleteProduct(id);

        // Then
        assertEquals(ResponseEntity.ok().build(), responseEntity);
    }

    @Test
    public void testDeleteProduct_whenProductDoesNotExist() {
        // Given
        Long id = 1L;
        when(productRepository.findById(id)).thenReturn(Optional.empty());

        // When
        ResponseEntity<Object> responseEntity = productController.deleteProduct(id);

        // Then
        assertEquals(ResponseEntity.notFound().build(), responseEntity);
    }
}
