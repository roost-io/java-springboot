// Test generated by RoostGPT for test Unit-test using AI Type Open AI and AI Model gpt-4

package com.bootexample4.products.controller;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class ProductController_deleteProduct_dcaff736d4_Test {

    @Mock
    private ProductRepository productRepository;

    @InjectMocks
    private ProductController productController;

    @Test
    public void testDeleteProductSuccess() {
        Long id = 1L; // TODO: Change this to the ID of the product you want to delete

        Product product = new Product();
        product.setId(id);

        when(productRepository.findById(id)).thenReturn(Optional.of(product));

        ResponseEntity<Object> response = productController.deleteProduct(id);

        verify(productRepository, times(1)).delete(product);
        assertEquals(ResponseEntity.ok().build(), response);
    }

    @Test
    public void testDeleteProductNotFound() {
        Long id = 1L; // TODO: Change this to the ID of the product you want to delete

        when(productRepository.findById(id)).thenReturn(Optional.empty());

        ResponseEntity<Object> response = productController.deleteProduct(id);

        verify(productRepository, times(0)).delete(any());
        assertEquals(ResponseEntity.notFound().build(), response);
    }
}
