# Test generated by RoostGPT for test june9rockwelldemo using AI Model gpt

config:
  target: "https://api.example.com"
  phases:
    - duration: 60
      arrivalRate: 5

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/products"
          json:
            name: "Test Product"
            description: "This is a test product"
            price: 9.99
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$.id"
              as: "productId"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
            - equals: ["$.name", "Test Product"]
            - equals: ["$.description", "This is a test product"]
            - equals: ["$.price", 9.99]

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/products"
          json:
            name: ""
            price: ""
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "message"
            - equals: ["$.error", "Bad Request"]
            - match: ["$.message", "Validation failed"]

  - name: "API request with edge case"
    flow:
      - post:
          url: "/products"
          json:
            name: "Test Product with special characters: !@#$%^&*()"
            description: "This is a test product with a very long description. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
            price: 999999.99
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$.id"
              as: "productId"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
            - match: ["$.name", "Test Product with special characters: !@#$%^&*()"]
            - match: ["$.description", "This is a test product with a very long description. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."]
            - equals: ["$.price", 999999.99]