# Test generated by RoostGPT for test dm-target-repo using AI Model gpt

config:
  target: "https://example.com/api/products"
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Successful API request"
    flow:
      - put:
          url: "/{{id}}"
          json:
            name: "Product A"
            description: "Product A description"
            price: 100
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
      - log: "Response: {{response}}"
      - think: 1
      - function: "assert(status === 200, 'Expected status code to be 200')"
      - function: "assert(response.name === 'Product A', 'Expected product name to be Product A')"

  - name: "API request with validation failure"
    flow:
      - put:
          url: "/{{id}}"
          json:
            name: ""
            description: "Product A description"
            price: 100
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
      - log: "Response: {{response}}"
      - think: 1
      - function: "assert(status === 400, 'Expected status code to be 400')"
      - function: "assert(response.error === 'Validation error: name is required', 'Expected error message to be present')"

  - name: "API request with edge case"
    flow:
      - put:
          url: "/{{id}}"
          json:
            name: "Product with special characters: !@#$%^&*()"
            description: "Product A description with a very long text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
            price: 100
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
      - log: "Response: {{response}}"
      - think: 1
      - function: "assert(status >= 200 && status < 300, 'Expected status code to be within acceptable range')"
      - function: "assert(response.name.includes('!@#$%^&*()'), 'Expected product name to contain special characters')"