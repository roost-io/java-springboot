# Test generated by RoostGPT for test june9rockwelldemo using AI Model gpt

config:
  target: "https://example.com/api/products"
  phases:
    - duration: 60
      arrivalRate: 5

scenarios:
  - name: "Successful API request"
    flow:
      - put:
          url: "/{{id}}"
          json:
            name: "Test Product"
            description: "This is a test product"
            price: 100
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$.id"
              as: "id"
          # Expect a 200 status code and the updated product data in the response
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"

  - name: "API request with validation failure"
    flow:
      - put:
          url: "/{{id}}"
          json:
            description: "This is a test product"
            price: 100
          headers:
            Content-Type: "application/json"
          # Expect a 400 status code and an error message in the response
          expect:
            - statusCode: 400
            - hasProperty: "error"

  - name: "API request with edge case"
    flow:
      - put:
          url: "/{{id}}"
          json:
            name: "Test Product with special characters: !@#$%^&*()"
            description: "This is a test product with a very long description that exceeds the normal limits of a description field. This test is designed to check if the API can handle large data inputs correctly."
            price: 1000000000000
          headers:
            Content-Type: "application/json"
          # Expect a status code within the acceptable range and the updated product data in the response
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"