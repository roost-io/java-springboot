config:
  target: 'https://api.example.com'
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: 'Successful API request'
    flow:
      - get:
          url: "/products/{{ $randomNumber(1, 100) }}"
          headers:
            Content-Type: "application/json"
          capture:
            json: "$"
            as: "response"
      - think: 1
      - assert:
          - statusCode: 200
          - response.body.productId: "{{ response.body.productId }}"

  - name: 'API request with non-existent product ID'
    flow:
      - get:
          url: "/products/{{ $randomNumber(1001, 2000) }}"
          headers:
            Content-Type: "application/json"
      - think: 1
      - assert:
          - statusCode: 404
          - response.body.error: "Product not found"

  - name: 'API request with invalid product ID'
    flow:
      - get:
          url: "/products/invalid_id"
          headers:
            Content-Type: "application/json"
      - think: 1
      - assert:
          - statusCode: 400
          - response.body.error: "Invalid product ID"

  - name: 'API request with edge case: large product ID'
    flow:
      - get:
          url: "/products/{{ $randomNumber(1000000000000, 9999999999999) }}"
          headers:
            Content-Type: "application/json"
      - think: 1
      - assert:
          - statusCode: 404
          - response.body.error: "Product not found"