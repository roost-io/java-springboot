config:
  target: 'https://api.example.com'
  phases:
    - duration: 60
      arrivalRate: 5

scenarios:
  - name: 'Successful API request'
    flow:
      - get:
          url: '/products/{{ $randomNumber(1, 100) }}'
          headers:
            Content-Type: 'application/json'
        expect:
          - statusCode: 200
          - hasProperty: 'productId'
          - hasProperty: 'productName'
          - hasProperty: 'price'

  - name: 'API request with non-existent product'
    flow:
      - get:
          url: '/products/999999'
          headers:
            Content-Type: 'application/json'
        expect:
          - statusCode: 404
          - hasProperty: 'error'
          - equals: '{{ error }}', 'Product not found'

  - name: 'API request with invalid productId'
    flow:
      - get:
          url: '/products/invalidId'
          headers:
            Content-Type: 'application/json'
        expect:
          - statusCode: 400
          - hasProperty: 'error'
          - equals: '{{ error }}', 'Invalid product ID'

  - name: 'API request with edge case: large productId'
    flow:
      - get:
          url: '/products/{{ $randomNumber(1000000, 10000000) }}'
          headers:
            Content-Type: 'application/json'
        expect:
          - statusCode: 404
          - hasProperty: 'error'
          - equals: '{{ error }}', 'Product not found'