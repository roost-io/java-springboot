# Test generated by RoostGPT for test dmtest using AI Model gpt

config:
  target: "https://api.example.com"
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "Bearer some_token"
        expect:
          - statusCode: 200
          - hasProperty: "name"
          - hasProperty: "price"

  - name: "API request with invalid productId"
    flow:
      - get:
          url: "/products/invalid_id"
          headers:
            Authorization: "Bearer some_token"
        expect:
          - statusCode: 400
          - hasProperty: "error"
          - equals: "{{ error.message }}": "Invalid product ID"

  - name: "API request with non-existent productId"
    flow:
      - get:
          url: "/products/999999999"
          headers:
            Authorization: "Bearer some_token"
        expect:
          - statusCode: 404
          - hasProperty: "error"
          - equals: "{{ error.message }}": "Product not found"

  - name: "API request with edge case: large productId"
    flow:
      - get:
          url: "/products/{{ largeProductId }}"
          headers:
            Authorization: "Bearer some_token"
        expect:
          - statusCode: "{{ gt(status, 199) && lt(status, 500) }}"
          - hasProperty: "name"
          - hasProperty: "price"

variables:
  productId: [1, 2, 3, 4, 5]
  largeProductId: [100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]